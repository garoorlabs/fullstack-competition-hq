spring:
  application:
    name: LeagueHQ

  datasource:
    url: jdbc:postgresql://localhost:5432/leaguehq
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-default-secret-key-change-in-production-minimum-256-bits}
  expiration: 86400000 # 24 hours in milliseconds

# Stripe Configuration
stripe:
  api-key: ${STRIPE_SECRET_KEY:sk_test_your_stripe_secret_key_here}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET:whsec_your_webhook_secret_here}
  price:
    monthly-dues: ${STRIPE_PRICE_MONTHLY_DUES:price_1SDtbME0uPsgn3jqufd7P2e9}
  connect:
    client-id: ${STRIPE_CONNECT_CLIENT_ID:ca_}

# AWS S3 / Cloudflare R2 Configuration
aws:
  s3:
    region: ${AWS_REGION:us-east-1}
    bucket-name: ${AWS_S3_BUCKET:leaguehq-photos}
    access-key-id: ${AWS_ACCESS_KEY_ID:}
    secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
    endpoint: ${AWS_S3_ENDPOINT:} # For Cloudflare R2

# Logging
logging:
  level:
    com.leaguehq: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173}

# Server Configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
